package g3401_3500.s3469_find_minimum_cost_to_remove_array_elements;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;

import org.junit.jupiter.api.Test;

class SolutionTest {
    @Test
    void minCost() {
        assertThat(new Solution().minCost(new int[] {6, 2, 8, 4}), equalTo(12));
    }

    @Test
    void minCost2() {
        assertThat(new Solution().minCost(new int[] {2, 1, 3, 3}), equalTo(5));
    }

    @Test
    void minCost3() {
        assertThat(
                new Solution()
                        .minCost(
                                new int[] {
                                    83, 47, 66, 24, 57, 85, 16, 20, 79, 5, 35, 18, 28, 67, 22, 95,
                                    84, 50, 59, 43, 30, 1, 69, 99, 65, 43, 23, 75, 40, 8, 78, 32,
                                    32, 99, 58, 78, 34, 91, 69, 82, 21, 46, 81, 75, 7, 75, 77, 28,
                                    96, 92, 85, 74, 99, 39, 11, 57, 88, 17, 3, 33, 70, 65, 99, 41,
                                    5, 28, 83, 24, 3, 33, 90, 66, 63, 28, 37, 68, 21, 11, 95, 1, 88,
                                    62, 40, 39, 51, 41, 72, 34, 12, 48, 17, 38, 87, 58, 64, 57, 91,
                                    49, 45, 22, 42, 46, 37, 84, 49, 23, 28, 90, 29, 98, 62, 79, 41,
                                    14, 37, 77, 66, 20, 1, 9, 62, 45, 73, 18, 42, 71, 87, 26, 18,
                                    44, 54, 30, 33, 33, 1, 12, 57, 86, 43, 13, 84, 60, 81, 85, 1, 4,
                                    19, 69, 44, 32, 19, 76, 26, 88, 13, 84, 63, 31, 95, 23, 28, 86,
                                    77, 72, 20, 93, 15, 70, 34, 7, 69, 26, 4, 47, 70, 75, 52, 28,
                                    21, 14, 27, 49, 9, 99, 73, 27, 51, 56, 80, 21, 85, 90, 67, 48,
                                    68, 59, 49, 26, 34, 100, 35, 80, 43, 78, 22, 96, 59, 32, 40, 15,
                                    58, 25, 33, 94, 76, 85, 4, 13, 43, 58, 71, 55, 77, 93, 73, 9,
                                    47, 24, 18, 13, 67, 49, 88, 77, 83, 17, 99, 78, 13, 83, 34, 27,
                                    13, 48, 65, 47, 4, 90, 8, 25, 13, 100, 60, 18, 48, 23, 2, 30,
                                    69, 61, 59, 56, 90, 61, 7, 8, 100, 84, 64, 28, 72, 20, 19, 37,
                                    9, 88, 93, 64, 64, 29, 23, 10, 98, 19, 80, 10, 15, 99, 89, 82,
                                    41, 83, 20, 81, 70, 17, 41, 40, 31, 59, 96, 52, 30, 36, 29, 9,
                                    21, 66, 38, 99, 37, 74, 87, 83, 64, 100, 99, 84, 83, 22, 16, 64,
                                    86, 10, 95, 23, 20, 26, 100, 70, 28, 11, 7, 23, 40, 62, 84, 60,
                                    78, 68, 29, 18, 62, 5, 24, 42, 46, 78, 89, 57, 98, 97, 87, 67,
                                    57, 31, 88, 89, 31, 74, 46, 62, 31, 48, 60, 31, 67, 100, 25, 13,
                                    87, 26, 13, 82, 58, 80, 80, 2, 36, 13, 51, 81, 71, 69, 23, 16,
                                    8, 20, 15, 92, 65, 68, 72, 26, 66, 24, 69, 29, 18, 99, 62, 63,
                                    93, 69, 29, 17, 65, 16, 66, 15, 84, 53, 97, 62, 38, 34, 69, 31,
                                    61, 98, 24, 41, 14, 76, 80, 1, 43, 57, 25, 81, 22
                                }),
                equalTo(12028));
    }
}
